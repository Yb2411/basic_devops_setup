name: 'Build / Push And Deploy Website'

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Replace backend URL
        run: sed -i "s|__BACKEND_URL__|${{ vars.BACKEND_URL }}|g" ./website/index.html

      - name: Build Docker image
        run: docker build . -t zumo_website:${{ github.sha }}

      - name: Tag Docker image
        run: |
          docker tag zumo_website:${{ github.sha }} ${{ vars.ECR_REPO_URL }}:${{ github.sha }}
          docker tag zumo_website:${{ github.sha }} ${{ vars.ECR_REPO_URL }}:latest

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ vars.ECR_REPO_URL }}:${{ github.sha }}
          docker push ${{ vars.ECR_REPO_URL }}:latest

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Plan
        run: terraform -chdir=terraform plan

      - name: Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve

  deploy:
    needs: [build, terraform]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Kubernetes
        run: |
          echo "${{ secrets.KUBERNETES_CA_CERT }}" | base64 --decode > ca.crt
          kubectl config set-cluster cluster_kube_zumo --server=${{ secrets.KUBERNETES_SERVER }} --certificate-authority=ca.crt
          kubectl config set-credentials github-sa --token=${{ secrets.KUBERNETES_TOKEN }}
          kubectl config set-context default --cluster=cluster_kube_zumo --user=github-sa
          kubectl config use-context default
          kubectl set image deployment/webserver-deployment zumo-webserver="${{ vars.ECR_REPO_URL }}:${{ github.sha }}"